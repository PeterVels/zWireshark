#ifndef colinprintHex
#define colinprintHex
typedef struct pcapng_shb{
  unsigned int     type ;
  unsigned int     length;
  unsigned int     magic;
  unsigned short   version_major;
  unsigned short   version_minor;
  unsigned long long section_length;
  /* ... Options ... */
  unsigned int     length_end;
} pcapng_shb =
{
        .type        = 0x0a0d0d0a,
        .length      = sizeof(pcapng_shb),
        .section_length      = -1,  // -0xfff means unknown
        .magicNumber = 0xa1b2c3d4,
        .version_major       = 0x0001,
        .version_minor       = 0x0000,
        .length_end  = sizeof(pcapng_shb)
};
// interface block
#define LINKTYPE_RAW  101
// this id of the interface is the sequence number of the
// interface definition block
// first is 0, next is 1
typedef struct pcapng_idb{
  unsigned int     type ;
  unsigned int     length;
  unsigned short   linkType;
  unsigned short   reserved;
  unsigned int     snapLen;
  /* ... Options ... */
  unsigned short otName;             // field is interface name
  unsigned short olName;             // lengh of name
  char           ovName[16];         // name of interface
  unsigned short otOS  ;             // field is operating system
  unsigned short olOS  ;             // lengh of OS
  char           ovName[4 ];         // value of OS
  unsigned int     length_end;
} pcapng_idb =
{
  .type        = 0x00000001,
  .length      = sizeof(pcapng_idb),
  .linkType    = LINKTYPE_RAW,
  .reserved    = 0,
  .otName      = 2,   // if_name
  .olName      = 16;  // length of interface name
//.ovName      =
  .otOS        = 12,  // OS_name
  .olOS        = 4 ;  // length of interface name
   ovOS        = {'z','/','O','S'};
  .length_end  = sizeof(pcapng_idb)
};
//
//  enhanced packet block - for data
//
typedef struct pcapng_epb{
  unsigned int     type ;
  unsigned int     length;
  unsigned int     interface;
  unsigned int     unixSeconds;
  unsigned int     uSeconds;
  unsigned int     capturedPacketLength;
  unsigned int     originalPacketLength;
  unsigned long long section_length;
  /* ... Options ... */
//unsigned int     length_end;
} pcapng_epb =
{
        .type        = 0x00000006,
        .length      = sizeof(pcapng_epb),
};
#endif
